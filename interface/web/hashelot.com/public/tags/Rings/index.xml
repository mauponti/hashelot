<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Rings on Hashelot</title>
    <link>https://hashelot.onrender.com/tags/Rings/</link>
    <description>Recent content in Rings on Hashelot</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>alias@hashelot.com</managingEditor>
    <webMaster>alias@hashelot.com</webMaster>
    <lastBuildDate>Wed, 15 Jul 2020 17:09:00 +0100</lastBuildDate>
    
        <atom:link href="https://hashelot.onrender.com/tags/Rings/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      <item>
        <title>[Day] Rings - A simple stacking game, just longer</title>
        <link>https://hashelot.onrender.com/games/dayrings/</link>
        <pubDate>Wed, 15 Jul 2020 17:09:00 +0100</pubDate>
        <author>alias@hashelot.com</author>
        <atom:modified>Wed, 15 Jul 2020 17:09:00 +0100</atom:modified>
        <guid>https://hashelot.onrender.com/games/dayrings/</guid>
        <description>The same rules of Rings apply, but with a longer gameplay: 5749 blocks to conclude a round, making it last around 24 hours.
  function depositWage(cash, _contract, _curr_account){ if(isNaN(cash)){ console.error(&#39;To play [Day] Rings, you need to input a number!&#39;); }else{ const amount = cash*10**15; console.log(_curr_account); _contract.methods.depositStack().estimateGas({from: _curr_account, value:amount}).then(gasEstimate = { _contract.methods.depositStack().send({from: _curr_account, value:amount, gas: gasEstimate},function(error, result){ if(!error) console.log(result); else console.error(error); }); }); } } function winnerSelection(_contract, _curr_account){ console.log(_curr_account); _contract.methods.closeBet().estimateGas({from: _curr_account, value: 0}).</description>
        
        
        
        
        
        
          
            
              <category>Ethereum</category>
            
          
            
              <category>MetaMask</category>
            
          
            
              <category>Dapper</category>
            
          
            
              <category>Rings</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Ropsten test Rings</title>
        <link>https://hashelot.onrender.com/games/testRings/</link>
        <pubDate>Sat, 06 Jun 2020 14:54:33 +0100</pubDate>
        <author>alias@hashelot.com</author>
        <atom:modified>Sat, 06 Jun 2020 14:54:33 +0100</atom:modified>
        <guid>https://hashelot.onrender.com/games/testRings/</guid>
        <description>function depositWage(cash, _contract, _curr_account){ if(isNaN(cash)){ console.error(&#39;To play Rings, you need to input a number!&#39;); }else{ const amount = cash*10**15; console.log(_curr_account); _contract.methods.depositStack().estimateGas({from: _curr_account, value:amount}).then(gasEstimate = { _contract.methods.depositStack().send({from: _curr_account, value:amount, gas: gasEstimate},function(error, result){ if(!error) console.log(result); else console.error(error); }); }); } } function winnerSelection(_contract, _curr_account){ console.log(_curr_account); _contract.methods.closeBet().estimateGas({from: _curr_account, value: 0}).then(gasEstimate = { _contract.methods.closeBet().send({from: _curr_account, value: 0, gas: gasEstimate},function(error, result){ if(!error) console.log(result); else console.error(error); }); }); }  var gameTime = 12; var current_network = 3; var networkWarning = &#39;To play Ropsten test Rings, set your MetaMask network on the Ropsten one.</description>
        
        
        
        
        
        
          
            
              <category>Rings</category>
            
          
            
              <category>MetaMask</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Rings - A simple stacking game</title>
        <link>https://hashelot.onrender.com/games/rings/</link>
        <pubDate>Sat, 06 Jun 2020 14:54:00 +0100</pubDate>
        <author>alias@hashelot.com</author>
        <atom:modified>Sat, 06 Jun 2020 14:54:00 +0100</atom:modified>
        <guid>https://hashelot.onrender.com/games/rings/</guid>
        <description>Rings is a stacking game written in Solidity and deployed on the Ethereum main network, whose game play you can audit straight out of the blockchain.
The contract has been verified on Etherscan on 2020-06-06.
You may also test it out on Ropsten.
  function depositWage(cash, _contract, _curr_account){ if(isNaN(cash)){ console.error(&#39;To play Rings, you need to input a number!&#39;); }else{ const amount = cash*10**15; console.log(_curr_account); _contract.methods.depositStack().estimateGas({from: _curr_account, value:amount}).then(gasEstimate = { _contract.</description>
        
        
        
        
        
        
          
            
              <category>Ethereum</category>
            
          
            
              <category>Hash function</category>
            
          
            
              <category>MetaMask</category>
            
          
            
              <category>Dapper</category>
            
          
            
              <category>Rings</category>
            
          
        
        
        
      </item>
      

    
  </channel>
</rss>