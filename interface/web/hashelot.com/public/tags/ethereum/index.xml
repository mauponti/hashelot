<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Ethereum on Hashelot</title>
    <link>https://hashelot.onrender.com/tags/Ethereum/</link>
    <description>Recent content in Ethereum on Hashelot</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>alias@hashelot.com</managingEditor>
    <webMaster>alias@hashelot.com</webMaster>
    <lastBuildDate>Thu, 02 Jul 2020 17:09:00 +0100</lastBuildDate>
    
        <atom:link href="https://hashelot.onrender.com/tags/Ethereum/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      <item>
        <title>[Day] Rings - A simple stacking game, just longer</title>
        <link>https://hashelot.onrender.com/games/dayrings/</link>
        <pubDate>Thu, 02 Jul 2020 17:09:00 +0100</pubDate>
        <author>alias@hashelot.com</author>
        <atom:modified>Thu, 02 Jul 2020 17:09:00 +0100</atom:modified>
        <guid>https://hashelot.onrender.com/games/dayrings/</guid>
        <description>The same rules of Rings apply, but with a longer gameplay: 5&#39;749 blocks to conclude a round, making it last around 24 hours.
Coming soon.</description>
        
        
        
        
        
        
          
            
              <category>Ethereum</category>
            
          
            
              <category>MetaMask</category>
            
          
            
              <category>Dapper</category>
            
          
            
              <category>Rings</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Trading assets in the lifespan of a single block (and hopefully profiting from it)</title>
        <link>https://hashelot.onrender.com/notes/flash-arbitrage/</link>
        <pubDate>Mon, 22 Jun 2020 21:47:10 +0100</pubDate>
        <author>alias@hashelot.com</author>
        <atom:modified>Mon, 22 Jun 2020 21:47:10 +0100</atom:modified>
        <guid>https://hashelot.onrender.com/notes/flash-arbitrage/</guid>
        <description>Flashloans are zero-risk instruments in the universe of Decentralized Finance (DeFi). Their purpose is not much different from the one held by more traditional loans: borrowing money to invest it in ventures or personal projects and lending it in order to gain a profit.
As the name itself suggests though, the novelty of the decentralized version lies in its instantaneous lifespan, a quality that on one hand enormously limits what a borrower can do with the received money, but that on the other hand manages to cancel credit risk, the possibility of a loss resulting from a borrower&amp;rsquo;s failure to repay a loan, making theoretically possible to lend any amount of money (Ether or tokens) to anyone without any risk.</description>
        
        
        
        
        
        
          
            
              <category>Flashloan</category>
            
          
            
              <category>Arbitrage</category>
            
          
            
              <category>DeFi</category>
            
          
            
              <category>Ethereum</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Rings - A simple stacking game</title>
        <link>https://hashelot.onrender.com/games/rings/</link>
        <pubDate>Sat, 06 Jun 2020 14:54:00 +0100</pubDate>
        <author>alias@hashelot.com</author>
        <atom:modified>Sat, 06 Jun 2020 14:54:00 +0100</atom:modified>
        <guid>https://hashelot.onrender.com/games/rings/</guid>
        <description>Rings is a stacking game written in Solidity and deployed on the Ethereum main network, whose game play you can audit straight out of the blockchain.
The contract has been verified on Etherscan on 2020-06-06.
You may also test it out on Ropsten.
  function depositWage(cash, _contract, _curr_account){ if(isNaN(cash)){ console.error(&#39;To play Rings, you need to input a number!&#39;); }else{ const amount = cash*10**15; console.log(_curr_account); _contract.methods.depositStack().estimateGas({from: _curr_account, value:amount}).then(gasEstimate = { _contract.</description>
        
        
        
        
        
        
          
            
              <category>Ethereum</category>
            
          
            
              <category>Hash function</category>
            
          
            
              <category>MetaMask</category>
            
          
            
              <category>Dapper</category>
            
          
            
              <category>Rings</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Born under the lockdown</title>
        <link>https://hashelot.onrender.com/notes/born-under-the-lockdown/</link>
        <pubDate>Thu, 04 Jun 2020 14:02:45 +0100</pubDate>
        <author>alias@hashelot.com</author>
        <atom:modified>Thu, 04 Jun 2020 14:02:45 +0100</atom:modified>
        <guid>https://hashelot.onrender.com/notes/born-under-the-lockdown/</guid>
        <description>You know those projects you keep postponing as you wait for the right moment to tackle them, but then a global pandemic hits the whole planet and you are faced with the choice of dedicating your newly acquired spare time doing chores around the house or pretending you are studying for an important project you had been postponing (waiting for the right time to develop it) and you choose wisely?</description>
        
        
        
        
        
        
          
            
              <category>Lockdown</category>
            
          
            
              <category>Ethereum</category>
            
          
        
        
        
      </item>
      

    
  </channel>
</rss>